{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ultra\\\\Desktop\\\\Thinkful\\\\flashcard-app-pro\\\\Project_Flashcards_Qualified_1\\\\src\\\\Cards\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\nimport { readCard, updateCard } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  deck\n}) {\n  _s();\n\n  const [card, setCard] = useState({});\n  const {\n    cardId\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    setCard({});\n    const abortController = new AbortController();\n\n    async function loadCard() {\n      try {\n        const cardFromAPI = await readCard(cardId, abortController.signal);\n        setCard(cardFromAPI);\n      } catch (err) {\n        if (err.name !== \"AbortError\") {\n          throw err;\n        }\n      }\n    }\n\n    if (cardId) {\n      loadCard();\n    }\n\n    return () => abortController.abort();\n  }, [cardId]);\n\n  const updateFormHandle = ({\n    target\n  }) => setCard({ ...card,\n    [target.name]: target.vakue\n  });\n\n  const handleDone = () => history.push(`/decks/${deck.id}`);\n\n  const cardUpdateHandle = async event => {\n    event.preventDefault();\n    console.log(card);\n    await updateCard(card);\n    handleDone();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"display-4\",\n      children: \" Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditCard, \"2I+38piSrB7oTgDb/LCYUckCf4Q=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["C:/Users/Ultra/Desktop/Thinkful/flashcard-app-pro/Project_Flashcards_Qualified_1/src/Cards/EditCard.js"],"names":["React","useState","useEffect","useParams","useHistory","CardForm","readCard","updateCard","EditCard","deck","card","setCard","cardId","history","abortController","AbortController","loadCard","cardFromAPI","signal","err","name","abort","updateFormHandle","target","vakue","handleDone","push","id","cardUpdateHandle","event","preventDefault","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAqC,kBAArC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAoC,oBAApC;;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaT,SAAS,EAA5B;AACA,QAAMU,OAAO,GAAGT,UAAU,EAA1B;AAGAF,EAAAA,SAAS,CAAE,MAAM;AACbS,IAAAA,OAAO,CAAE,EAAF,CAAP;AACA,UAAMG,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,mBAAeC,QAAf,GAA0B;AACtB,UAAI;AACA,cAAMC,WAAW,GAAG,MAAMX,QAAQ,CAACM,MAAD,EAASE,eAAe,CAACI,MAAzB,CAAlC;AACAP,QAAAA,OAAO,CAACM,WAAD,CAAP;AAEH,OAJD,CAIC,OAAME,GAAN,EAAU;AACP,YAAGA,GAAG,CAACC,IAAJ,KAAa,YAAhB,EAA8B;AAC1B,gBAAMD,GAAN;AACH;AACJ;AACJ;;AACD,QAAGP,MAAH,EAAW;AAAEI,MAAAA,QAAQ;AAAI;;AACzB,WAAO,MAAMF,eAAe,CAACO,KAAhB,EAAb;AACH,GAhBQ,EAgBN,CAACT,MAAD,CAhBM,CAAT;;AAkBA,QAAMU,gBAAgB,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAcZ,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,KAACa,MAAM,CAACH,IAAR,GAAeG,MAAM,CAACC;AAAhC,GAAD,CAA9C;;AACA,QAAMC,UAAU,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAc,UAASjB,IAAI,CAACkB,EAAG,EAA/B,CAAzB;;AACA,QAAMC,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACtCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAZ;AACA,UAAMH,UAAU,CAACG,IAAD,CAAhB;AACAe,IAAAA,UAAU;AACb,GALD;;AAOA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAvCQjB,Q;UAEcL,S,EACHC,U;;;KAHXI,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory} from \"react-router-dom\"\r\nimport CardForm from \"./CardForm\"\r\nimport { readCard, updateCard} from \"../utils/api/index\"\r\n\r\nfunction EditCard({deck}) {\r\n    const [card, setCard] = useState({})\r\n    const { cardId } = useParams()\r\n    const history = useHistory()\r\n\r\n\r\n    useEffect (() => {\r\n        setCard ({})\r\n        const abortController = new AbortController()\r\n        async function loadCard() {\r\n            try {\r\n                const cardFromAPI = await readCard(cardId, abortController.signal)\r\n                setCard(cardFromAPI)\r\n\r\n            }catch(err){\r\n                if(err.name !== \"AbortError\") {\r\n                    throw err\r\n                }\r\n            }\r\n        }\r\n        if(cardId) { loadCard() }\r\n        return () => abortController.abort()\r\n    }, [cardId])\r\n\r\n    const updateFormHandle = ({target}) => setCard({...card, [target.name]: target.vakue})\r\n    const handleDone = () => history.push(`/decks/${deck.id}`)\r\n    const cardUpdateHandle = async (event) => {\r\n        event.preventDefault()\r\n        console.log(card)\r\n        await updateCard(card)\r\n        handleDone()\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h4 className=\"display-4\"> Edit Card</h4>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default EditCard"]},"metadata":{},"sourceType":"module"}