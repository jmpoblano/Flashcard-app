{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ultra\\\\Desktop\\\\Thinkful\\\\flashcard-app-pro\\\\Project_Flashcards_Qualified_1\\\\src\\\\Cards\\\\CreateCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\nimport { createCard } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateCard({\n  deck\n}) {\n  _s();\n\n  const initialFormState = {\n    front: \"\",\n    back: \"\"\n  };\n  const [card, setCard] = useState({ ...initialFormState\n  });\n  const history = useHistory();\n\n  const updateFormHandle = ({\n    target\n  }) => setCard({ ...card,\n    [target.name]: target.value\n  });\n\n  const handleDone = () => history.push(`/decks/${deck.id}`);\n\n  const cardCreateHandle = async event => {\n    event.preventDefault();\n    await createCard(deck.id, card);\n    setCard({ ...initialFormState\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"display-4\",\n      children: [\" \", deck.name, \": Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n      card: card,\n      submit: cardCreateHandle,\n      done: handleDone,\n      update: updateFormHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateCard, \"z0LAKoyoRMITYvk5PTrJbC/kyrY=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateCard;\nexport default CreateCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCard\");","map":{"version":3,"sources":["C:/Users/Ultra/Desktop/Thinkful/flashcard-app-pro/Project_Flashcards_Qualified_1/src/Cards/CreateCard.js"],"names":["React","useState","useHistory","CardForm","createCard","CreateCard","deck","initialFormState","front","back","card","setCard","history","updateFormHandle","target","name","value","handleDone","push","id","cardCreateHandle","event","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA4B;AAAA;;AACxB,QAAMC,gBAAgB,GAAG;AAACC,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAzB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAC,GAAGM;AAAJ,GAAD,CAAhC;AACA,QAAMK,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,gBAAgB,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAcH,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,KAACI,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAAhC,GAAD,CAA9C;;AACA,QAAMC,UAAU,GAAG,MAAML,OAAO,CAACM,IAAR,CAAc,UAASZ,IAAI,CAACa,EAAG,EAA/B,CAAzB;;AAEA,QAAMC,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACtCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMlB,UAAU,CAACE,IAAI,CAACa,EAAN,EAAUT,IAAV,CAAhB;AACAC,IAAAA,OAAO,CAAC,EAAC,GAAGJ;AAAJ,KAAD,CAAP;AACH,GAJD;;AAOA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,sBAA4BD,IAAI,CAACS,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEL,IAAhB;AAAsB,MAAA,MAAM,EAAEU,gBAA9B;AAAgD,MAAA,IAAI,EAAEH,UAAtD;AAAkE,MAAA,MAAM,EAAEJ;AAA1E;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAxBQR,U;UAGWH,U;;;KAHXG,U;AA0BT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport CardForm from \"./CardForm\"\r\nimport {createCard} from \"../utils/api/index\"\r\n\r\nfunction CreateCard({deck}) {\r\n    const initialFormState = {front: \"\", back: \"\"}\r\n    const [card, setCard] = useState({...initialFormState})\r\n    const history = useHistory()\r\n\r\n    const updateFormHandle = ({target}) => setCard({...card, [target.name]: target.value})\r\n    const handleDone = () => history.push(`/decks/${deck.id}`)\r\n\r\n    const cardCreateHandle = async (event) => {\r\n        event.preventDefault()\r\n        await createCard(deck.id, card)\r\n        setCard({...initialFormState})\r\n    }\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h4 className=\"display-4\"> {deck.name}: Add Card</h4>\r\n            <CardForm card={card} submit={cardCreateHandle} done={handleDone} update={updateFormHandle} />\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n    \r\n}\r\n\r\nexport default CreateCard"]},"metadata":{},"sourceType":"module"}